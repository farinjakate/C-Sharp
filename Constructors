using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace _18_Constructors
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Student s1 = new Student();
            s1.Details();

            Student s2 = new Student();
            s2.RollNumber = 12;
            s2.FirstName = "Farin";
            s2.LastName = "Jakate";
            s2.Details();


            //Object Initializer syntax
            Student s3 = new Student()
            {
                RollNumber = 13,
                FirstName = "swamini",
                LastName = "dateer"
            };
            s3.Details();

            Student s4 = new Student();
            s4.Initialize(14, "sabiha", "Inamdar");
            s4.Details();


            Student s5 = new Student();
            s5.Details();//without initialize object will not call

            Student s6 = new Student(15, "pratiksha", "More");
            s6.Details();
            Student s7 = new Student();//parameterless
            Student s8 = new Student(4, "nazmin", "Jakate");//parameterized

            //ways of writing constructor
            //parameterized constructor
            Student s9 = new Student(10, "farin", "jakate");
            s9.Details();

            //parameterless constructor
            Student s10 = s9;
            s10.Details();


            Student s11 = new Student();
            s11.RollNumber = s9.RollNumber;//s11 ke liye seperate object rehenga heap me
            s11.FirstName = s9.FirstName;
            s11.LastName = s9.LastName;
            s11.Details();

            Student s12 = new Student(s11);
            s12.Details();

            Student s13 = new Student();
            s13.Details();
            Student s14 = new Student();
            s14.Details();
            Student s15 = new Student();
            s15.Details();

            Student s16 = new Student();
            Student s17 = new Student();
            Student s18 = new Student();
            Student s19 = new Student();

            ////static constructor gets called when we access any static member
            Console.WriteLine($"Course Name:{Student.CourseName}");

            Student s20 = new Student();
            Console.WriteLine($"Course Name:{Student.CourseName}");


            customer c1 = new customer();
             Console.ReadLine();
        }
    }
}
