using System;
using System.Collections.Generic;
using System.Diagnostics.Eventing.Reader;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace _12_MethodsDemo
{
    internal class Program
    {
        static void Main(string[] args)//calling method
        {
            printA(); //method call

            printB("farin");//1 type of calling here farin is the method argument
            string name = "fiza"; // 2 type of calling
            printB(name);               //here name=> method argument
            printC("farin", "jakate");
            //or
            string firstname = "Rehana", lastname = "jakate";
            printC(firstname, lastname);

            string marksheet = printD("swamini", "dateer");
            
                Console.WriteLine($"printD() marksheet fullname :{marksheet}");
            printE(true);
            printE(false);
            Console.ReadLine();

            printF(null);
            int[] numbers = new int[] { 50, 10, 20 };
            printF(numbers);
            Console.ReadLine();
        }
        static void printA()
        {
            Console.WriteLine("printA() Method called");// Method called
        }

        //method without return with parameter
        static void printB(string name)
        {
            Console.WriteLine($"printB() :hello,{name}");
            Console.ReadLine();

        }
        //3. method without return multiple parameters
        static void printC(string fn, string ln)
        {
            Console.WriteLine($"printC() : Full name : {fn} {ln}");
        }

        //4 method with return with parameter
        static string printD(string fn, string ln)
        {
            return fn + " , " + ln;
        }

    
        static void printE(bool isConfirmed)
        {
            if (!isConfirmed)
            {
                return;
            }
            Console.WriteLine($"printE(){isConfirmed}:session Allowed");
        }

    static void printF(int[] numbers)
        {
            if (numbers != null && numbers.Length > 0)
            {

                int sum = 0;
                for (int i = 0; i < numbers.Length; i++)
                {
                    sum += numbers[i];
                }

                Console.WriteLine($"sum of Array Items :{sum}");                
            }

            else
            {
                Console.WriteLine("no Numbers To Add");                
            }
            }
        }
    }




